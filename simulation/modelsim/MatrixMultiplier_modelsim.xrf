vendor_name = ModelSim
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/ControlUnit/microcode.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/registers/reg_RstLd.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/registers/reg_RstIncLd.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/registers/reg_RstInc.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/registers/reg_ID.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/registers/reg_AC.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/buffer.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/ALU.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/Mux/mux1_ControlUnit.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/Mux/mux2_ControlUnit.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/ControlUnit/controller.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/TestBenches/tb_microcode.v
source_file = 1, E:/fpga/MatrixMultiplier/verilog_scripts/TestBenches/tb_mux2_CU.v
source_file = 1, E:/fpga/MatrixMultiplier/db/MatrixMultiplier.cbx.xml
design_name = microcode
instance = comp, \condition[0]~output , condition[0]~output, microcode, 1
instance = comp, \condition[1]~output , condition[1]~output, microcode, 1
instance = comp, \BT~output , BT~output, microcode, 1
instance = comp, \OPs[0]~output , OPs[0]~output, microcode, 1
instance = comp, \OPs[1]~output , OPs[1]~output, microcode, 1
instance = comp, \OPs[2]~output , OPs[2]~output, microcode, 1
instance = comp, \OPs[3]~output , OPs[3]~output, microcode, 1
instance = comp, \OPs[4]~output , OPs[4]~output, microcode, 1
instance = comp, \OPs[5]~output , OPs[5]~output, microcode, 1
instance = comp, \OPs[6]~output , OPs[6]~output, microcode, 1
instance = comp, \OPs[7]~output , OPs[7]~output, microcode, 1
instance = comp, \OPs[8]~output , OPs[8]~output, microcode, 1
instance = comp, \OPs[9]~output , OPs[9]~output, microcode, 1
instance = comp, \OPs[10]~output , OPs[10]~output, microcode, 1
instance = comp, \OPs[11]~output , OPs[11]~output, microcode, 1
instance = comp, \OPs[12]~output , OPs[12]~output, microcode, 1
instance = comp, \OPs[13]~output , OPs[13]~output, microcode, 1
instance = comp, \OPs[14]~output , OPs[14]~output, microcode, 1
instance = comp, \OPs[15]~output , OPs[15]~output, microcode, 1
instance = comp, \OPs[16]~output , OPs[16]~output, microcode, 1
instance = comp, \OPs[17]~output , OPs[17]~output, microcode, 1
instance = comp, \OPs[18]~output , OPs[18]~output, microcode, 1
instance = comp, \OPs[19]~output , OPs[19]~output, microcode, 1
instance = comp, \OPs[20]~output , OPs[20]~output, microcode, 1
instance = comp, \OPs[21]~output , OPs[21]~output, microcode, 1
instance = comp, \OPs[22]~output , OPs[22]~output, microcode, 1
instance = comp, \OPs[23]~output , OPs[23]~output, microcode, 1
instance = comp, \OPs[24]~output , OPs[24]~output, microcode, 1
instance = comp, \OPs[25]~output , OPs[25]~output, microcode, 1
instance = comp, \OPs[26]~output , OPs[26]~output, microcode, 1
instance = comp, \OPs[27]~output , OPs[27]~output, microcode, 1
instance = comp, \OPs[28]~output , OPs[28]~output, microcode, 1
instance = comp, \OPs[29]~output , OPs[29]~output, microcode, 1
instance = comp, \OPs[30]~output , OPs[30]~output, microcode, 1
instance = comp, \OPs[31]~output , OPs[31]~output, microcode, 1
instance = comp, \OPs[32]~output , OPs[32]~output, microcode, 1
instance = comp, \OPs[33]~output , OPs[33]~output, microcode, 1
instance = comp, \OPs[34]~output , OPs[34]~output, microcode, 1
instance = comp, \OPs[35]~output , OPs[35]~output, microcode, 1
instance = comp, \OPs[36]~output , OPs[36]~output, microcode, 1
instance = comp, \OPs[37]~output , OPs[37]~output, microcode, 1
instance = comp, \OPs[38]~output , OPs[38]~output, microcode, 1
instance = comp, \OPs[39]~output , OPs[39]~output, microcode, 1
instance = comp, \OPs[40]~output , OPs[40]~output, microcode, 1
instance = comp, \OPs[41]~output , OPs[41]~output, microcode, 1
instance = comp, \OPs[42]~output , OPs[42]~output, microcode, 1
instance = comp, \OPs[43]~output , OPs[43]~output, microcode, 1
instance = comp, \OPs[44]~output , OPs[44]~output, microcode, 1
instance = comp, \OPs[45]~output , OPs[45]~output, microcode, 1
instance = comp, \OPs[46]~output , OPs[46]~output, microcode, 1
instance = comp, \OPs[47]~output , OPs[47]~output, microcode, 1
instance = comp, \OPs[48]~output , OPs[48]~output, microcode, 1
instance = comp, \OPs[49]~output , OPs[49]~output, microcode, 1
instance = comp, \OPs[50]~output , OPs[50]~output, microcode, 1
instance = comp, \jump_addr[0]~output , jump_addr[0]~output, microcode, 1
instance = comp, \jump_addr[1]~output , jump_addr[1]~output, microcode, 1
instance = comp, \jump_addr[2]~output , jump_addr[2]~output, microcode, 1
instance = comp, \jump_addr[3]~output , jump_addr[3]~output, microcode, 1
instance = comp, \jump_addr[4]~output , jump_addr[4]~output, microcode, 1
instance = comp, \jump_addr[5]~output , jump_addr[5]~output, microcode, 1
instance = comp, \jump_addr[6]~output , jump_addr[6]~output, microcode, 1
instance = comp, \jump_addr[7]~output , jump_addr[7]~output, microcode, 1
instance = comp, \jump_addr[8]~output , jump_addr[8]~output, microcode, 1
instance = comp, \jump_addr[9]~output , jump_addr[9]~output, microcode, 1
instance = comp, \jump_addr[10]~output , jump_addr[10]~output, microcode, 1
instance = comp, \jump_addr[11]~output , jump_addr[11]~output, microcode, 1
instance = comp, \jump_addr[12]~output , jump_addr[12]~output, microcode, 1
instance = comp, \jump_addr[13]~output , jump_addr[13]~output, microcode, 1
instance = comp, \jump_addr[14]~output , jump_addr[14]~output, microcode, 1
instance = comp, \jump_addr[15]~output , jump_addr[15]~output, microcode, 1
instance = comp, \reg_out[0]~input , reg_out[0]~input, microcode, 1
instance = comp, \reg_out[1]~input , reg_out[1]~input, microcode, 1
instance = comp, \reg_out[2]~input , reg_out[2]~input, microcode, 1
instance = comp, \reg_out[3]~input , reg_out[3]~input, microcode, 1
instance = comp, \reg_out[4]~input , reg_out[4]~input, microcode, 1
instance = comp, \reg_out[5]~input , reg_out[5]~input, microcode, 1
instance = comp, \reg_out[6]~input , reg_out[6]~input, microcode, 1
instance = comp, \reg_out[7]~input , reg_out[7]~input, microcode, 1
instance = comp, \reg_out[8]~input , reg_out[8]~input, microcode, 1
instance = comp, \reg_out[9]~input , reg_out[9]~input, microcode, 1
instance = comp, \reg_out[10]~input , reg_out[10]~input, microcode, 1
instance = comp, \reg_out[11]~input , reg_out[11]~input, microcode, 1
instance = comp, \reg_out[12]~input , reg_out[12]~input, microcode, 1
instance = comp, \reg_out[13]~input , reg_out[13]~input, microcode, 1
instance = comp, \reg_out[14]~input , reg_out[14]~input, microcode, 1
instance = comp, \reg_out[15]~input , reg_out[15]~input, microcode, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
